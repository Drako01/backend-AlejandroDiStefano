{"timestamp":"2023-07-30T15:29:08.576Z","error":"mongoConnections is not defined"}
{"timestamp":"2023-07-30T15:29:20.625Z","error":"mongoConnections is not defined"}
{"timestamp":"2023-07-30T15:34:30.511Z","error":"mongoConnectiond is not defined"}
{"timestamp":"2023-07-30T15:36:42.789Z","error":"Cast to ObjectId failed for value \"64cs4930bbbefe1a2ec79e6a\" (type string) at path \"_id\" for model \"Product\""}
{"timestamp":"2023-07-30T15:38:49.755Z","error":"producto is not defined"}
{"timestamp":"2023-07-30T15:39:47.340Z","error":"producto is not defined"}
{"timestamp":"2023-07-30T15:45:08.501Z","error":"error is not defined"}
{"timestamp":"2023-07-30T15:46:16.267Z"}
{"timestamp":"2023-07-30T15:47:03.594Z"}
{"timestamp":"2023-07-30T15:47:40.395Z","error":"error is not defined"}
{"timestamp":"2023-07-30T16:47:29.275Z","error":"Cast to ObjectId failed for value \"64b8295p3301691b40b81e2f\" (type string) at path \"_id\" for model \"Product\""}
{"timestamp":"2023-07-30T16:50:29.529Z","error":"Cast to ObjectId failed for value \"64b8295p3301691b40b81e2f\" (type string) at path \"_id\" for model \"Product\""}
{"timestamp":"2023-07-30T17:00:20.433Z","error":"Cast to ObjectId failed for value \"64b8295p3301691b40b81e2f\" (type string) at path \"_id\" for model \"Product\""}
{"timestamp":"2023-07-30T17:00:25.927Z","error":"Cast to ObjectId failed for value \"64b82951b40b81e2f\" (type string) at path \"_id\" for model \"Product\""}
{"timestamp":"2023-07-30T17:06:05.362Z","error":"Cast to ObjectId failed for value \"64b8295p3301691b40b81e2f\" (type string) at path \"_id\" for model \"Product\""}
{"timestamp":"2023-07-30T17:06:41.757Z","error":"Cast to ObjectId failed for value \"64b8295p3301691b40b81e2f\" (type string) at path \"_id\" for model \"Product\""}
{"timestamp":"2023-07-30T18:32:10.965Z","error":"Cast to ObjectId failed for value \"64b863301691b40b81e2f\" (type string) at path \"_id\" for model \"Product\""}
{"timestamp":"2023-07-30T18:32:29.137Z","error":"Cast to ObjectId failed for value \"64b8295633091b40b81e2f\" (type string) at path \"_id\" for model \"Product\""}
{"timestamp":"2023-07-30T18:33:04.620Z","error":"The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string."}
{"timestamp":"2023-07-30T18:33:29.233Z","error":"Operation `products.find()` buffering timed out after 10000ms"}
{"timestamp":"2023-07-30T18:33:44.692Z","error":"Operation `products.aggregate()` buffering timed out after 10000ms"}
{"timestamp":"2023-07-30T18:33:58.408Z","error":"Operation `carts.findOne()` buffering timed out after 10000ms"}
{"timestamp":"2023-07-30T18:34:39.555Z","error":"The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string."}
{"timestamp":"2023-07-30T18:34:52.101Z","error":"Operation `products.find()` buffering timed out after 10000ms"}
{"timestamp":"2023-07-30T18:35:05.552Z","error":"Operation `products.aggregate()` buffering timed out after 10000ms"}
{"timestamp":"2023-07-30T18:35:19.074Z","error":"Operation `carts.findOne()` buffering timed out after 10000ms"}
{"timestamp":"2023-07-30T18:37:51.671Z","error":"The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string."}
{"timestamp":"2023-07-30T18:41:25.442Z","error":"The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string."}
{"timestamp":"2023-07-30T18:41:40.441Z","error":"Operation `products.find()` buffering timed out after 10000ms"}
{"timestamp":"2023-07-30T18:46:10.191Z","error":"The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string."}
{"timestamp":"2023-07-30T18:49:52.223Z","error":"The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string."}
{"timestamp":"2023-07-30T18:51:41.361Z","error":"The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string."}
{"timestamp":"2023-07-30T18:57:03.351Z","error":"The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string."}
{"timestamp":"2023-07-30T18:59:21.642Z","error":"The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string."}
{"timestamp":"2023-07-30T18:59:40.613Z","error":"The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string."}
{"timestamp":"2023-07-30T18:59:45.438Z","error":"error is not defined"}
{"timestamp":"2023-07-30T18:59:45.438Z","error":"error is not defined"}
{"timestamp":"2023-07-30T19:01:01.706Z","error":"The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string."}
{"timestamp":"2023-07-30T19:01:04.077Z","error":"req is not defined"}
{"timestamp":"2023-07-30T19:01:19.467Z","error":"Operation `products.aggregate()` buffering timed out after 10000ms"}
{"timestamp":"2023-07-30T19:01:47.964Z","error":"The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string."}
{"timestamp":"2023-07-30T19:01:50.743Z","error":"req is not defined"}
{"timestamp":"2023-07-30T19:03:10.483Z","error":"The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string."}
{"timestamp":"2023-07-30T19:03:13.382Z","error":"error is not defined"}
{"timestamp":"2023-07-30T19:03:13.383Z","error":"error is not defined"}
{"timestamp":"2023-07-30T19:05:38.368Z","error":"The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string."}
{"timestamp":"2023-07-30T19:05:41.406Z","error":"error is not defined"}
{"timestamp":"2023-07-30T19:05:41.407Z","error":"error is not defined"}
{"timestamp":"2023-07-30T19:13:59.508Z","error":"error is not defined"}
{"timestamp":"2023-07-30T19:13:59.509Z","error":"error is not defined"}
{"timestamp":"2023-07-30T19:14:12.903Z","error":"Operation `products.find()` buffering timed out after 10000ms"}
{"timestamp":"2023-07-30T22:04:48.888Z","error":"user is not defined"}
{"timestamp":"2023-07-30T22:04:57.965Z","error":"user is not defined"}
{"timestamp":"2023-07-30T22:16:06.286Z"}
{"timestamp":"2023-07-30T22:25:12.953Z","error":"message is not defined"}
{"timestamp":"2023-07-30T22:25:18.589Z","error":"message is not defined"}
{"timestamp":"2023-07-30T22:25:24.263Z","error":"message is not defined"}
{"timestamp":"2023-07-30T22:33:24.165Z","error":"Cast to ObjectId failed for value \"ddd\" (type string) at path \"_id\" for model \"Product\""}
{"timestamp":"2023-07-30T22:34:21.721Z","error":"Cast to ObjectId failed for value \"ddd\" (type string) at path \"_id\" for model \"Product\""}
{"timestamp":"2023-07-30T22:35:57.079Z","error":"Cast to ObjectId failed for value \"64b829563301691bd7\" (type string) at path \"_id\" for model \"Product\""}
{"timestamp":"30/07/2023, 7:44 p. m.","error":"Cast to ObjectId failed for value \"656\" (type string) at path \"_id\" for model \"Product\""}
{"timestamp":"30/07/2023, 7:47 p. m.","error":"Cast to ObjectId failed for value \"656\" (type string) at path \"_id\" for model \"Product\""}
{"timestamp":"30/07/2023, 19:47","error":"Cast to ObjectId failed for value \"656\" (type string) at path \"_id\" for model \"Product\""}
{"timestamp":"30/07/2023, 19:48","error":"The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string."}
{"timestamp":"30/07/2023, 19:49","error":"The `uri` parameter to `openUri()` must be a string, got \"undefined\". Make sure the first parameter to `mongoose.connect()` or `mongoose.createConnection()` is a string."}
{"timestamp":"30/07/2023, 19:50","error":"mongoConnections is not defined"}
{"timestamp":"30/07/2023, 19:51","error":"Cast to ObjectId failed for value \"656\" (type string) at path \"_id\" for model \"Product\""}
{"timestamp":"31/07/2023, 07:50","error":"Intentaron ingresar a una Pagina No Existente.!! \n        Error 404 | Método: GET en la URL: http://localhost:8080/45"}
{"timestamp":"31/07/2023, 07:50","error":"Intentaron ingresar a una Pagina No Existente.!! \n        Error 404 | Método: GET en la URL: http://localhost:8080/45"}
{"timestamp":"31/07/2023, 07:51","error":"Intentaron ingresar a una Pagina No Existente.!! - Error 404 | Método: GET en la URL: http://localhost:8080/45"}
{"timestamp":"31/07/2023, 07:52","error":"Intentaron ingresar a una Pagina No Existente.!! - Error 404 | Método: GET en la URL: http://localhost:8080/45"}
{"timestamp":"31/07/2023, 07:53","error":"Intentaron ingresar a una Pagina No Existente.!! - Error 404 | Método: GET en la URL: http://localhost:8080/45"}
{"timestamp":"31/07/2023, 07:56","error":"Intentaron ingresar a una Pagina No Existente.!! - Error 404 | Método: GET en la URL: http://localhost:8080/45"}
{"timestamp":"31/07/2023, 07:56","error":"Intentaron ingresar a una Pagina No Existente.!! - Error 404 | Método: GET en la URL: http://localhost:8080/45"}
{"timestamp":"31/07/2023, 07:57","error":"Intentaron ingresar a una Pagina No Existente.!! - Error 404 | Método: GET en la URL: http://localhost:8080/45"}
{"timestamp":"31/07/2023, 07:58","error":"Intentaron ingresar a una Pagina No Existente.!! - Error 404 | Método: GET en la URL: http://localhost:8080/45"}
{"timestamp":"31/07/2023, 08:00","error":"Intentaron ingresar a una Pagina No Existente.!! - Error 404 | Método: GET en la URL: http://localhost:8080/45"}
{"timestamp":"31/07/2023, 08:01","error":"Intentaron ingresar a una Pagina No Existente.!! - Error 404 | Método: GET en la URL: http://localhost:8080/45"}
{"timestamp":"31/07/2023, 08:06","error":"Intentaron ingresar a una Pagina No Existente.!! - Error 404 | Método: GET en la URL: http://localhost:8080/45"}
{"timestamp":"31/07/2023, 08:07","error":"Intentaron ingresar a una Pagina No Existente.!! - Error 404 | Método: GET en la URL: http://localhost:8080/45"}
{"timestamp":"31/07/2023, 08:08","error":"Intentaron ingresar a una Pagina No Existente.!! - Error 404 | Método: GET en la URL: http://localhost:8080/45"}
{"timestamp":"31/07/2023, 08:09","error":"Intentaron ingresar a una Pagina No Existente.!! - Error 404 | Método: GET en la URL: http://localhost:8080/45"}
{"timestamp":"31/07/2023, 08:10","error":"Intentaron ingresar a una Pagina No Existente.!! - Error 404 | Método: GET en la URL: http://localhost:8080/45"}
{"timestamp":"31/07/2023, 08:10","error":"Intentaron ingresar a una Pagina No Existente.!! - Error 404 | Método: GET en la URL: http://localhost:8080/45"}
{"timestamp":"31/07/2023, 08:12","error":"Intentaron ingresar a una Pagina No Existente.!! - Error 404 | Método: GET en la URL: http://localhost:8080/45"}
{"timestamp":"31/07/2023, 08:13","error":"Intentaron ingresar a una Pagina No Existente.!! - Error 404 | Método: GET en la URL: http://localhost:8080/45"}
{"timestamp":"31/07/2023, 08:13","error":"Intentaron ingresar a una Pagina No Existente.!! - Error 404 | Método: GET en la URL: http://localhost:8080/45"}
{"timestamp":"31/07/2023, 12:50","error":"user.save is not a function"}
{"timestamp":"31/07/2023, 14:46","error":"El puerto 8080 está en uso. Por favor, elija un puerto diferente."}
{"timestamp":"31/07/2023, 14:47"}
{"timestamp":"31/07/2023, 14:48","error":"El puerto 8080 está en uso. Por favor, elija un puerto diferente."}
{"timestamp":"31/07/2023, 14:51","error":"El puerto 8080 está en uso. Por favor, elija un puerto diferente."}
{"timestamp":"31/07/2023, 16:04","error":"Error al intentar iniciar el Servidor porque el puerto 8080 está en uso por otro proceso.!"}
{"timestamp":"31/07/2023, 16:06","error":"Error al intentar iniciar el Servidor porque el puerto 8080 está en uso por otro proceso.!"}
{"timestamp":"31/07/2023, 16:07","error":"Error al intentar iniciar el Servidor porque el puerto 8080 está en uso por otro proceso.!"}
{"timestamp":"31/07/2023, 16:07","error":"Error al intentar iniciar el Servidor porque el puerto 8080 está en uso por otro proceso.!"}
{"timestamp":"31/07/2023, 16:10","error":"Error al intentar iniciar el Servidor porque el puerto 8080 está en uso por otro proceso.!"}
{"timestamp":"31/07/2023, 16:11","error":"Error al intentar iniciar el Servidor porque el puerto 8080 está en uso por otro proceso.!"}
{"timestamp":"31/07/2023, 18:01","error":"Cannot read properties of null (reading '_id')"}
{"timestamp":"31/07/2023, 18:01","error":"Cannot read properties of null (reading '_id')"}
{"timestamp":"31/07/2023, 18:01","error":"Cannot read properties of null (reading '_id')"}
{"timestamp":"31/07/2023, 18:04","error":"cart.save is not a function"}
{"timestamp":"31/07/2023, 18:04","error":"cart.save is not a function"}
{"timestamp":"31/07/2023, 20:54","error":"connect ECONNREFUSED ::1:80"}
{"timestamp":"31/07/2023, 20:57","error":"connect ECONNREFUSED ::1:80"}
{"timestamp":"31/07/2023, 21:04","error":"Cannot create property 'Symbol(level)' on string 'Product not found in any cart.'"}
{"timestamp":"31/07/2023, 21:07","error":"Cannot read properties of undefined (reading 'code')"}
{"timestamp":"31/07/2023, 21:08","error":"connect ECONNREFUSED ::1:80"}
{"timestamp":"31/07/2023, 21:15","error":"connect ECONNREFUSED ::1:80"}
{"timestamp":"31/07/2023, 21:17","error":"connect ECONNREFUSED ::1:80"}
{"timestamp":"31/07/2023, 21:17","error":"connect ECONNREFUSED ::1:80"}
{"timestamp":"31/07/2023, 21:19","error":"product.save is not a function"}
{"timestamp":"31/07/2023, 21:21","error":"connect ECONNREFUSED ::1:80"}
{"timestamp":"31/07/2023, 21:21","error":"connect ECONNREFUSED ::1:80"}
{"timestamp":"31/07/2023, 21:23","error":"connect ECONNREFUSED ::1:80"}
{"timestamp":"31/07/2023, 21:29","error":"connect ECONNREFUSED ::1:80"}
{"timestamp":"31/07/2023, 21:32","error":"connect ECONNREFUSED ::1:80"}
{"timestamp":"31/07/2023, 21:35","error":"connect ECONNREFUSED ::1:80"}
{"timestamp":"31/07/2023, 21:36","error":"connect ECONNREFUSED ::1:80"}
{"timestamp":"31/07/2023, 21:37","error":"connect ECONNREFUSED ::1:80"}
{"timestamp":"31/07/2023, 21:37","error":"connect ECONNREFUSED ::1:80"}
{"timestamp":"31/07/2023, 21:42","error":"item is not defined"}
{"timestamp":"31/07/2023, 21:42","error":"item is not defined"}
{"timestamp":"31/07/2023, 21:42","error":"item is not defined"}
{"timestamp":"31/07/2023, 21:42","error":"item is not defined"}
{"timestamp":"31/07/2023, 21:42","error":"item is not defined"}
{"timestamp":"31/07/2023, 21:42","error":"item is not defined"}
{"timestamp":"31/07/2023, 21:42","error":"item is not defined"}
{"timestamp":"31/07/2023, 21:42","error":"item is not defined"}
{"timestamp":"31/07/2023, 21:42","error":"item is not defined"}
{"timestamp":"31/07/2023, 21:42","error":"item is not defined"}
{"timestamp":"31/07/2023, 21:42","error":"item is not defined"}
{"timestamp":"31/07/2023, 21:42","error":"item is not defined"}
{"timestamp":"31/07/2023, 21:42","error":"item is not defined"}
{"timestamp":"31/07/2023, 21:42","error":"item is not defined"}
{"timestamp":"31/07/2023, 21:43","error":"item is not defined"}
{"timestamp":"31/07/2023, 21:43","error":"item is not defined"}
{"timestamp":"31/07/2023, 21:43","error":"item is not defined"}
{"timestamp":"31/07/2023, 21:43","error":"CartService.getAll(...).populate is not a function"}
{"timestamp":"31/07/2023, 21:43","error":"CartService.getAll(...).populate is not a function"}
{"timestamp":"31/07/2023, 21:43","error":"CartService.getAll(...).populate is not a function"}
{"timestamp":"31/07/2023, 21:44","error":"CartService.getAll(...).populate is not a function"}
{"timestamp":"31/07/2023, 21:44","error":"CartService.getAll(...).populate is not a function"}
{"timestamp":"31/07/2023, 21:44","error":"CartService.getAll(...).populate is not a function"}
{"timestamp":"31/07/2023, 21:45","error":"Cannot create property 'Symbol(level)' on string 'Product not found in any cart.'"}
{"timestamp":"31/07/2023, 21:45","error":"Cannot create property 'Symbol(level)' on string 'Product not found in any cart.'"}
{"timestamp":"31/07/2023, 21:45","error":"Cannot create property 'Symbol(level)' on string 'Product not found in any cart.'"}
{"timestamp":"31/07/2023, 21:46","error":"connect ECONNREFUSED ::1:80"}
{"timestamp":"31/07/2023, 21:47","error":"connect ECONNREFUSED ::1:80"}
{"timestamp":"31/07/2023, 21:48","error":"cart is not defined"}
{"timestamp":"31/07/2023, 21:50","error":"product.save is not a function"}
{"timestamp":"31/07/2023, 21:52","error":"connect ECONNREFUSED ::1:80"}
{"timestamp":"31/07/2023, 21:58","error":"connect ECONNREFUSED ::1:80"}
{"timestamp":"31/07/2023, 22:02","error":"connect ECONNREFUSED ::1:80"}
{"timestamp":"31/07/2023, 22:04","error":"Intentaron ingresar a una Pagina No Existente.!! - Error 404 | Método: GET en la URL: http://localhost:8080/undefined"}
{"timestamp":"31/07/2023, 22:04","error":"Invalid status code 404"}
{"timestamp":"01/08/2023, 08:31","error":"Cannot read properties of undefined (reading 'forEach')"}
{"timestamp":"01/08/2023, 08:32","error":"Cannot read properties of undefined (reading 'forEach')"}
